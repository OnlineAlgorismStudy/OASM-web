{"version":3,"sources":["assets/images/good.png","utils/redux.js","redux/modules/user.js","redux/modules/file.js","pages/Home.js","redux/modules/index.js","utils/saga.js","utils/firebase.js","saga/user.js","saga/file.js","saga/index.js","redux/Store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","init","status","data","error","baseAsyncActionHandler","name","actionTypes","request","state","produce","draft","success","action","payload","failure","response","baseApiActionType","require","createEntity","entity","type","initialState","users","userAction","createAction","userActions","userEntity","handleActions","files","monthlyFiles","fileAction","monthlyFileAction","fileActions","monthlyFileActions","fileEntity","monthlyFileEntity","Day","styled","div","Image","img","image","dispatch","useDispatch","useState","show","setShow","date","setDate","moment","format","month","useSelector","store","user","file","complates","setComplates","notComplates","setNotComplates","getFilePath","fileName","useEffect","map","find","github","_","isEmpty","filter","Container","Modal","size","centered","backdrop","onHide","Header","Title","Button","variant","onClick","Body","style","textAlign","Spinner","animation","color","notComplate","join","complate","key","href","target","rel","Badge","fontSize","dayNameTextStyle","renderDay","args","getFiles","length","onClickDay","day","window","open","combineReducers","fetchEntity","apiFn","put","params","call","console","log","watchSaga","saga","take","firebaseConfig","firebase","rootSaga","getUsersSaga","a","firestore","collection","get","then","snapshot","docs","doc","push","id","catch","err","all","fork","getMonthlyFiles","days","Array","keys","parseInt","query","where","splice","flat","getFilesSaga","getMonthlyFilesSaga","userSaga","fileSaga","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","applyMiddleware","createStore","rootReducer","run","Store","Home","Boolean","location","hostname","match","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b5f4a6f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/good.8f4df9ee.png\";","import produce from \"immer\";\nimport { createAction } from \"redux-actions\";\n\nexport const ALREADY = \"ALREADY\";\nexport const REQUEST = \"REQUEST\";\nexport const SUCCESS = \"SUCCESS\";\nexport const FAILURE = \"FAILURE\";\nexport const DELETED = \"DELETED\";\n\nexport const init = {\n  status: ALREADY,\n  data: [],\n  error: \"\",\n};\n\nexport const baseAsyncActionHandler = (name, actionTypes) => {\n  return {\n    [actionTypes.request]: (state) => {\n      return produce(state, (draft) => {\n        draft[name].status = REQUEST;\n        draft[name].data = [];\n        draft[name].error = \"\";\n      });\n    },\n    [actionTypes.success]: (state, action) => {\n      return produce(state, (draft) => {\n        draft[name].status = SUCCESS;\n        draft[name].data = action.payload.data;\n      });\n    },\n    [actionTypes.failure]: (state, action) => {\n      return produce(state, (draft) => {\n        draft[name].status = FAILURE;\n        draft[name].error = action.error.response;\n      });\n    },\n  };\n};\n\nconst pluralize = require(\"pluralize\");\nexport const restAsyncActionHandler = (name, actionTypes) => {\n  const names = pluralize(name);\n  return {\n    ...baseAsyncActionHandler(names, actionTypes.index),\n    ...baseAsyncActionHandler(name, actionTypes.show),\n    ...baseAsyncActionHandler(name, actionTypes.create),\n    ...baseAsyncActionHandler(name, actionTypes.update),\n    ...baseAsyncActionHandler(name, actionTypes.delete),\n  };\n};\n\nexport const baseActionType = (name) => {\n  return {\n    already: `${name}s/already`,\n    index: `${name}s/index`,\n    create: `${name}s/create`,\n    show: `${name}s/show`,\n    update: `${name}s/update`,\n    delete: `${name}s/delete`,\n    index_params: `${name}s/index_params`,\n  };\n};\n\nexport const baseAction = (actionType) => {\n  return {\n    already: createAction(actionType.already),\n    index: createAction(actionType.index),\n    create: createAction(actionType.create),\n    show: createAction(actionType.show),\n    update: createAction(actionType.update),\n    delete: createAction(actionType.delete),\n    index_params: createAction(actionType.index_params),\n  };\n};\n\nexport const baseApiActionType = (name) => {\n  return {\n    request: `${name}_REQUEST`,\n    success: `${name}_SUCCESS`,\n    failure: `${name}_FAILURE`,\n  };\n};\n\nexport const restApiActionType = (name) => {\n  return {\n    index: baseApiActionType(name.index),\n    show: baseApiActionType(name.show),\n    create: baseApiActionType(name.create),\n    update: baseApiActionType(name.update),\n    delete: baseApiActionType(name.delete),\n  };\n};\n\nexport const createEntity = (entity) => ({\n  request: () => ({ type: entity.request }),\n  success: (data) => ({ type: entity.success, payload: data }),\n  failure: (error) => ({ type: entity.failure, error: error }),\n});\n\nexport const createEntities = (entity) => ({\n  index: createEntity(entity.index),\n  show: createEntity(entity.show),\n  create: createEntity(entity.create),\n  update: createEntity(entity.update),\n  delete: createEntity(entity.delete),\n});\n","import { createAction, handleActions } from \"redux-actions\";\nimport {\n  baseApiActionType,\n  baseAsyncActionHandler,\n  createEntity,\n  init,\n} from \"utils/redux\";\n\nconst initialState = {\n  users: init,\n};\n\nexport const USER = \"user\";\nexport const userAction = createAction(USER);\nexport const userActions = baseApiActionType(userAction);\nexport const userEntity = createEntity(userActions);\n\nexport default handleActions(\n  {\n    ...baseAsyncActionHandler(\"users\", userActions),\n  },\n  initialState\n);\n","import { createAction, handleActions } from \"redux-actions\";\nimport {\n  baseApiActionType,\n  baseAsyncActionHandler,\n  createEntity,\n  init,\n} from \"utils/redux\";\n\nconst initialState = {\n  files: init,\n  monthlyFiles: init,\n};\n\nexport const FILE = \"file\";\nexport const MONTHLY_FILE = \"monthly_file\";\n\nexport const fileAction = createAction(FILE);\nexport const monthlyFileAction = createAction(MONTHLY_FILE);\n\nexport const fileActions = baseApiActionType(fileAction);\nexport const monthlyFileActions = baseApiActionType(monthlyFileAction);\n\nexport const fileEntity = createEntity(fileActions);\nexport const monthlyFileEntity = createEntity(monthlyFileActions);\n\nexport default handleActions(\n  {\n    ...baseAsyncActionHandler(\"files\", fileActions),\n    ...baseAsyncActionHandler(\"monthlyFiles\", monthlyFileActions),\n  },\n  initialState\n);\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Modal, Button, Spinner, Badge } from \"react-bootstrap\";\nimport CalendarMonthView from \"@joungsik/react-calendar-month-view\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { SUCCESS } from \"utils/redux\";\nimport { userAction } from \"redux/modules/user\";\nimport { fileAction, monthlyFileAction } from \"redux/modules/file\";\n\nimport image from \"assets/images/good.png\";\n\nconst Day = styled.div`\n  background-color: white;\n  border: 0.25px solid #f8f8f8;\n  text-align: center;\n`;\n\nconst Image = styled.img`\n  width: 80%;\n  height: 80%;\n  margin-top: 10%;\n  background-size: contain;\n  background-image: url(${image});\n`;\n\nexport default () => {\n  const dispatch = useDispatch();\n\n  const [show, setShow] = useState(false);\n\n  const [date, setDate] = useState(null);\n  const [month, setMonth] = useState(moment().format(\"MM\"));\n\n  const users = useSelector((store) => store.user.users);\n  const files = useSelector((store) => store.file.files);\n  const monthlyFiles = useSelector((store) => store.file.monthlyFiles);\n\n  const [complates, setComplates] = useState([]);\n  const [notComplates, setNotComplates] = useState([]);\n\n  const getFilePath = (date, fileName) =>\n    `https://github.com/OnlineAlgorismStudy/OnAlSt/blob/master/src/question/month${moment(\n      date\n    ).format(\"MM\")}/day${moment(date).format(\"MMDD\")}/${fileName}`;\n\n  const onClickDay = (day) => {\n    window.open(\n      getFilePath(day, `${moment(day).format(\"MMDD\")}.JPG`),\n      \"_blank\"\n    );\n  };\n\n  useEffect(() => {\n    dispatch(userAction());\n    dispatch(monthlyFileAction(month));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (users.status === SUCCESS && files.status === SUCCESS) {\n      setComplates(\n        files.data.map((file) => {\n          const user = users.data.find((user) => user.github === file.name);\n          if (!_.isEmpty(user)) {\n            return {\n              name: user.name,\n              files: file.files,\n            };\n          } else {\n            return file;\n          }\n        })\n      );\n      setNotComplates(\n        users.data.filter((user) => {\n          const file = files.data.find((file) => file.name === user.github);\n          return _.isEmpty(file);\n        })\n      );\n    }\n  }, [dispatch, files, users]);\n\n  const getFiles = (date) => {\n    setShow(true);\n    setDate(date);\n    dispatch(fileAction({ date: moment(date).format(\"YYYY-MM-DD\") }));\n  };\n\n  return (\n    <Container>\n      <Modal\n        show={show}\n        size=\"lg\"\n        centered\n        backdrop=\"static\"\n        onHide={() => setShow(false)}\n      >\n        <Modal.Header>\n          <Modal.Title>달성 확인</Modal.Title>\n          <Button variant=\"secondary\" onClick={() => setShow(false)}>\n            Close\n          </Button>\n        </Modal.Header>\n        <Modal.Body style={{ textAlign: \"center\" }}>\n          {files.status !== SUCCESS && (\n            <Spinner animation=\"grow\" variant=\"dark\" />\n          )}\n          {users.status === SUCCESS && files.status === SUCCESS && (\n            <>\n              <p style={{ color: \"red\" }}>미 달성자</p>\n              <p>\n                {notComplates.map((notComplate) => notComplate.name).join(\", \")}\n              </p>\n              <p style={{ color: \"blue\" }}>달성자</p>\n              {complates.map((complate) => (\n                <a\n                  key={complate.name}\n                  href={getFilePath(date, complate.files[0].name)}\n                  target={\"_blank\"}\n                  rel=\"noopener noreferrer\"\n                >\n                  <Badge style={{ fontSize: 18 }} variant=\"primary\">\n                    {complate.name}\n                  </Badge>{\" \"}\n                </a>\n              ))}\n            </>\n          )}\n        </Modal.Body>\n      </Modal>\n      <CalendarMonthView\n        dayNameTextStyle={{ textAlign: \"center\" }}\n        renderDay={(args) => (\n          <Day date={args} onClick={() => getFiles(args)}>\n            {monthlyFiles.status === SUCCESS &&\n              monthlyFiles.data.map(\n                (data) =>\n                  data.date === moment(args).format(\"YYYY-MM-DD\") &&\n                  data.length >= users.data.length && <Image key={files.key} />\n              )}\n          </Day>\n        )}\n        onClickDay={onClickDay}\n      />\n    </Container>\n  );\n};\n","import { combineReducers } from \"redux\";\n\nimport user from \"redux/modules/user\";\nimport file from \"redux/modules/file\";\n\nexport default combineReducers({ user, file });\n","import { put, call, take } from \"redux-saga/effects\";\n\nexport const fetchEntity = (entity, apiFn) =>\n  function* (...params) {\n    yield put(entity.request());\n    try {\n      const data = yield call(apiFn, ...params);\n      yield put(entity.success(data));\n    } catch (error) {\n      console.log(error);\n      yield put(entity.failure(error));\n    }\n  };\n\nexport const watchSaga = (action, saga) =>\n  function* () {\n    while (true) {\n      const { payload } = yield take(action);\n      yield call(saga, payload);\n    }\n  };\n","import * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = require(\"assets/oasm.json\");\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import { all, fork } from \"redux-saga/effects\";\nimport { USER, userEntity } from \"redux/modules/user\";\nimport { fetchEntity, watchSaga } from \"utils/saga\";\nimport firebase from \"utils/firebase\";\n\nconst getUsers = async () => {\n  const users = [];\n  await firebase\n    .firestore()\n    .collection(\"users\")\n    .get()\n    .then((snapshot) => {\n      snapshot.docs.map((doc) => {\n        if (doc.data().state !== 1) {\n          users.push({\n            name: doc.data().name,\n            github: doc.id,\n            state: doc.data().state,\n          });\n        }\n      });\n    })\n    .catch((err) => {\n      console.log(\"Error getting documents\", err);\n    });\n  return { data: users };\n};\n\nconst getUsersSaga = fetchEntity(userEntity, getUsers);\n\nexport default function* rootSaga() {\n  yield all([fork(watchSaga(USER, getUsersSaga))]);\n}\n","import { all, fork } from \"redux-saga/effects\";\nimport {\n  FILE,\n  fileEntity,\n  MONTHLY_FILE,\n  monthlyFileEntity,\n} from \"redux/modules/file\";\nimport { fetchEntity, watchSaga } from \"utils/saga\";\nimport firebase from \"utils/firebase\";\n\nconst getFiles = async (data) => {\n  const users = [];\n  await firebase\n    .firestore()\n    .collection(\"date\")\n    .doc(data.date)\n    .collection(\"users\")\n    .get()\n    .then((snapshot) => {\n      snapshot.docs.map((doc) =>\n        users.push({\n          name: doc.id,\n          files: doc.data().files,\n        })\n      );\n    })\n    .catch((err) => {\n      console.log(\"Error getting documents\", err);\n    });\n  return { data: users };\n};\n\nconst getMonthlyFiles = async (month) => {\n  const days = [...Array(31).keys()].map(\n    (day) => `2020-${month}-${day + 1 < 10 ? \"0\" + parseInt(day + 1) : day + 1}`\n  );\n\n  const query = [];\n  query.push(\n    await firebase\n      .firestore()\n      .collection(\"date\")\n      .where(\"date\", \"in\", days.splice(0, 10))\n      .get()\n  );\n  query.push(\n    await firebase\n      .firestore()\n      .collection(\"date\")\n      .where(\"date\", \"in\", days.splice(0, 10))\n      .get()\n  );\n  query.push(\n    await firebase\n      .firestore()\n      .collection(\"date\")\n      .where(\"date\", \"in\", days.splice(0, 10))\n      .get()\n  );\n  query.push(\n    await firebase\n      .firestore()\n      .collection(\"date\")\n      .where(\"date\", \"in\", days.splice(0, 10))\n      .get()\n  );\n\n  const data = query.map((date) => date.docs.map((doc) => doc.data())).flat();\n\n  return { data: data };\n};\n\nconst getFilesSaga = fetchEntity(fileEntity, getFiles);\nconst getMonthlyFilesSaga = fetchEntity(monthlyFileEntity, getMonthlyFiles);\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchSaga(FILE, getFilesSaga)),\n    fork(watchSaga(MONTHLY_FILE, getMonthlyFilesSaga)),\n  ]);\n}\n","import { all } from \"redux-saga/effects\";\n\nimport userSaga from \"saga/user\";\nimport fileSaga from \"saga/file\";\n\nexport default function* rootSaga() {\n  yield all([userSaga(), fileSaga()]);\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootReducer from \"redux/modules\";\nimport rootSaga from \"saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport default () => {\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const middleware = applyMiddleware(sagaMiddleware);\n\n  const store = createStore(rootReducer, composeEnhancers(middleware));\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\n\nimport Home from \"pages/Home\";\nimport Store from \"redux/Store\";\n\nconst store = Store();\n\nexport default () => {\n  return (\n    <Provider store={store}>\n      <Home />\n    </Provider>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}