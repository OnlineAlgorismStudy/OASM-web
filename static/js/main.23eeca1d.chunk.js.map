{"version":3,"sources":["assets/images/good.png","utils/redux.js","redux/modules/user.js","redux/modules/file.js","pages/Home.js","redux/modules/index.js","utils/saga.js","utils/firebase.js","saga/user.js","saga/file.js","saga/index.js","redux/Store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","init","status","data","error","baseAsyncActionHandler","name","actionTypes","request","state","produce","draft","success","action","payload","failure","response","baseApiActionType","createEntity","entity","type","initialState","users","userAction","createAction","userActions","userEntity","handleActions","files","file","origin","fileAction","createFileAction","originFileAction","fileActions","creatFileActions","originFileActions","fileEntity","originFileEntity","Day","styled","div","Image","img","image","dispatch","useDispatch","useState","show","setShow","useSelector","store","user","originFiles","complates","setComplates","notComplates","setNotComplates","useEffect","filter","map","includes","key","value","Container","Modal","size","centered","backdrop","onHide","Header","Title","Button","variant","onClick","Body","style","textAlign","Spinner","animation","color","notComplate","join","complate","github","href","target","rel","Badge","fontSize","dayNameTextStyle","renderDay","args","date","moment","format","Object","keys","length","combineReducers","fetchEntity","apiFn","put","params","call","console","log","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","watchGetUsers","rootSaga","getUsersSaga","a","database","ref","once","then","result","array","val","push","take","all","fork","watchGetFiles","watchGetOriginFiles","getFiles","values","getOriginFiles","getFilesSaga","getOriginFilesSaga","userSaga","fileSaga","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","applyMiddleware","createStore","rootReducer","run","Store","Home","Boolean","location","hostname","match","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.23eeca1d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/good.8f4df9ee.png\";","import produce from \"immer\";\n\nexport const ALREADY = \"ALREADY\";\nexport const REQUEST = \"REQUEST\";\nexport const SUCCESS = \"SUCCESS\";\nexport const FAILURE = \"FAILURE\";\n\nexport const init = {\n  status: ALREADY,\n  data: [],\n  error: \"\",\n};\n\nexport const baseAsyncActionHandler = (name, actionTypes) => {\n  return {\n    [actionTypes.request]: (state) => {\n      return produce(state, (draft) => {\n        draft[name].status = REQUEST;\n        draft[name].data = [];\n        draft[name].error = \"\";\n      });\n    },\n    [actionTypes.success]: (state, action) => {\n      return produce(state, (draft) => {\n        draft[name].status = SUCCESS;\n        draft[name].data = action.payload.data;\n      });\n    },\n    [actionTypes.failure]: (state, action) => {\n      return produce(state, (draft) => {\n        draft[name].status = FAILURE;\n        draft[name].error = action.error.response;\n      });\n    },\n  };\n};\n\nexport const baseApiActionType = (name) => {\n  return {\n    request: `${name}_REQUEST`,\n    success: `${name}_SUCCESS`,\n    failure: `${name}_FAILURE`,\n  };\n};\n\nexport const createEntity = (entity) => ({\n  request: () => ({ type: entity.request }),\n  success: (data) => ({ type: entity.success, payload: data }),\n  failure: (error) => ({ type: entity.failure, error: error }),\n});\n","import { createAction, handleActions } from \"redux-actions\";\nimport {\n  baseApiActionType,\n  baseAsyncActionHandler,\n  createEntity,\n  init,\n} from \"utils/redux\";\n\nconst initialState = {\n  users: init,\n};\n\nexport const USER = \"user\";\nexport const userAction = createAction(USER);\nexport const userActions = baseApiActionType(userAction);\nexport const userEntity = createEntity(userActions);\n\nexport default handleActions(\n  {\n    ...baseAsyncActionHandler(\"users\", userActions),\n  },\n  initialState\n);\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport {\n  baseApiActionType,\n  baseAsyncActionHandler,\n  createEntity,\n  init,\n  SUCCESS,\n} from \"utils/redux\";\n\nconst initialState = {\n  files: init,\n  file: init,\n  origin: init,\n};\n\nexport const FILE = \"file\";\nexport const CREATE_FILE = \"create_file\";\nexport const ORIGIN = \"origin_file\";\n\nexport const fileAction = createAction(FILE);\nexport const createFileAction = createAction(CREATE_FILE);\nexport const originFileAction = createAction(ORIGIN);\n\nexport const fileActions = baseApiActionType(fileAction);\nexport const creatFileActions = baseApiActionType(createFileAction);\nexport const originFileActions = baseApiActionType(originFileAction);\n\nexport const fileEntity = createEntity(fileActions);\nexport const createFileEntity = createEntity(creatFileActions);\nexport const originFileEntity = createEntity(originFileActions);\n\nexport default handleActions(\n  {\n    ...baseAsyncActionHandler(\"files\", fileActions),\n    ...baseAsyncActionHandler(\"file\", creatFileActions),\n    ...baseAsyncActionHandler(\"origin\", originFileActions),\n    [creatFileActions.success]: (state, action) => {\n      return produce(state, (draft) => {\n        draft[\"file\"].status = SUCCESS;\n      });\n    },\n  },\n  initialState\n);\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Modal, Button, Spinner, Badge } from \"react-bootstrap\";\nimport CalendarMonthView from \"@joungsik/react-calendar-month-view\";\nimport moment from \"moment\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { SUCCESS } from \"utils/redux\";\nimport { userAction } from \"redux/modules/user\";\nimport { fileAction, originFileAction } from \"redux/modules/file\";\n\nimport image from \"assets/images/good.png\";\n\nconst Day = styled.div`\n  background-color: white;\n  border: 0.25px solid #f8f8f8;\n  text-align: center;\n`;\n\nconst Image = styled.img`\n  width: 80%;\n  height: 80%;\n  margin-top: 10%;\n  background-size: contain;\n  background-image: url(${image});\n`;\n\nexport default () => {\n  const dispatch = useDispatch();\n\n  const [show, setShow] = useState(false);\n\n  const users = useSelector((store) => store.user.users);\n  const files = useSelector((store) => store.file.files);\n  const originFiles = useSelector((store) => store.file.origin);\n\n  const [complates, setComplates] = useState([]);\n  const [notComplates, setNotComplates] = useState([]);\n\n  useEffect(() => {\n    dispatch(userAction());\n    dispatch(originFileAction());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (files.status === SUCCESS) {\n      setComplates(\n        users.data\n          .filter((user) =>\n            files.data.map((file) => file.user).includes(user.key)\n          )\n          .map((user) => user.value)\n      );\n      setNotComplates(\n        users.data\n          .filter(\n            (user) => !files.data.map((file) => file.user).includes(user.key)\n          )\n          .map((user) => user.value)\n      );\n    }\n  }, [dispatch, users, files]);\n\n  const getFiles = (date) => {\n    setShow(true);\n    dispatch(fileAction({ date: moment(date).format(\"YYYY-MM-DD\") }));\n  };\n\n  return (\n    <Container>\n      <Modal\n        show={show}\n        size=\"lg\"\n        centered\n        backdrop=\"static\"\n        onHide={() => setShow(false)}\n      >\n        <Modal.Header>\n          <Modal.Title>달성 확인</Modal.Title>\n          <Button variant=\"secondary\" onClick={() => setShow(false)}>\n            Close\n          </Button>\n        </Modal.Header>\n        <Modal.Body style={{ textAlign: \"center\" }}>\n          {files.status !== SUCCESS && (\n            <Spinner animation=\"grow\" variant=\"dark\" />\n          )}\n          {files.status === SUCCESS && (\n            <>\n              <p style={{ color: \"red\" }}>미 달성자</p>\n              <p>\n                {notComplates.map((notComplate) => notComplate.name).join(\", \")}\n              </p>\n              <p style={{ color: \"blue\" }}>달성자</p>\n              {complates.map((complate) => (\n                <a\n                  key={complate.github}\n                  href={\"https://github.com/OnlineAlgorismStudy/OnAlSt\"}\n                  target={\"_blank\"}\n                  rel=\"noopener noreferrer\"\n                >\n                  <Badge style={{ fontSize: 18 }} variant=\"primary\">\n                    {complate.name}\n                  </Badge>{\" \"}\n                </a>\n              ))}\n            </>\n          )}\n        </Modal.Body>\n      </Modal>\n      {originFiles.status === SUCCESS && (\n        <CalendarMonthView\n          dayNameTextStyle={{ textAlign: \"center\" }}\n          renderDay={(args) => (\n            <Day date={args} onClick={() => getFiles(args)}>\n              {originFiles.data.map(\n                (files) =>\n                  files.key === moment(args).format(\"YYYY-MM-DD\") &&\n                  Object.keys(files.value).length === users.data.length && (\n                    <Image key={files.key} />\n                  )\n              )}\n            </Day>\n          )}\n        />\n      )}\n    </Container>\n  );\n};\n","import { combineReducers } from \"redux\";\n\nimport user from \"redux/modules/user\";\nimport file from \"redux/modules/file\";\n\nexport default combineReducers({ user, file });\n","import { put, call } from \"redux-saga/effects\";\n\nexport const fetchEntity = (entity, apiFn) =>\n  function* (...params) {\n    yield put(entity.request());\n    try {\n      const data = yield call(apiFn, ...params);\n      yield put(entity.success(data));\n    } catch (error) {\n      console.log(error);\n      yield put(entity.failure(error));\n    }\n  };\n","import * as firebase from \"firebase/app\";\nimport \"firebase/database\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDYHjPAufAjSDR7b09_SfZxrFRN3IPIbX8\",\n  authDomain: \"oasm-889a7.firebaseapp.com\",\n  databaseURL: \"https://oasm-889a7.firebaseio.com\",\n  projectId: \"oasm-889a7\",\n  storageBucket: \"oasm-889a7.appspot.com\",\n  messagingSenderId: \"187405855435\",\n  appId: \"1:187405855435:web:318d1ae149f82e8743094e\",\n  measurementId: \"G-659EFPREVS\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import { call, take, fork, all } from \"redux-saga/effects\";\nimport { USER, userEntity } from \"redux/modules/user\";\nimport { fetchEntity } from \"utils/saga\";\nimport firebase from \"utils/firebase\";\n\nconst getUsers = async () =>\n  await firebase\n    .database()\n    .ref(\"users\")\n    .once(\"value\")\n    .then((result) => {\n      const array = [];\n      Object.keys(result.val()).map((key) => {\n        array.push({\n          key: key,\n          value: result.val()[key],\n        });\n        return [];\n      });\n      return {\n        data: array,\n      };\n    });\n\nconst getUsersSaga = fetchEntity(userEntity, getUsers);\n\nfunction* watchGetUsers() {\n  while (true) {\n    const { payload } = yield take(USER);\n    yield call(getUsersSaga, payload);\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchGetUsers)]);\n}\n","import { call, take, fork, all } from \"redux-saga/effects\";\nimport {\n  FILE,\n  fileEntity,\n  ORIGIN,\n  originFileEntity,\n  // CREATE_FILE,\n  // createFileEntity,\n} from \"redux/modules/file\";\nimport { fetchEntity } from \"utils/saga\";\nimport firebase from \"utils/firebase\";\n// import { moment } from \"moment\";\n\nconst getFiles = async (data) =>\n  await firebase\n    .database()\n    .ref(`files/${data.date}`)\n    .once(\"value\")\n    .then((result) => ({\n      data: Object.values(result.val()),\n    }));\n\nconst getOriginFiles = async () =>\n  await firebase\n    .database()\n    .ref(\"files\")\n    .once(\"value\")\n    .then((result) => {\n      const array = [];\n      Object.keys(result.val()).map((key) => {\n        array.push({\n          key: key,\n          value: result.val()[key],\n        });\n        return [];\n      });\n      return {\n        data: array,\n      };\n    });\n\n// const createFile = async (data) => {\n//   // 같은 키 값이라면 업데이트\n//   await data.map((file) => {\n//     firebase\n//       .database()\n//       .ref(\"files\")\n//       .child(file.date)\n//       .child(file.key)\n//       .set(\n//         JSON.parse(\n//           JSON.stringify({\n//             date: file.date,\n//             name: file.name,\n//             extension: file.extension,\n//             message: file.message,\n//             upload: file.upload,\n//             user: file.key,\n//           })\n//         )\n//       );\n//   });\n// };\n\nconst getFilesSaga = fetchEntity(fileEntity, getFiles);\nconst getOriginFilesSaga = fetchEntity(originFileEntity, getOriginFiles);\n// const createFilesSaga = fetchEntity(createFileEntity, createFile);\n\nfunction* watchGetFiles() {\n  while (true) {\n    const { payload } = yield take(FILE);\n    yield call(getFilesSaga, payload);\n  }\n}\n\nfunction* watchGetOriginFiles() {\n  while (true) {\n    const { payload } = yield take(ORIGIN);\n    yield call(getOriginFilesSaga, payload);\n  }\n}\n\n// function* watchCreateFiles() {\n//   while (true) {\n//     const { payload } = yield take(CREATE_FILE);\n//     yield call(createFilesSaga, payload);\n//   }\n// }\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchGetFiles),\n    fork(watchGetOriginFiles),\n    //    fork(watchCreateFiles),\n  ]);\n}\n","import { all } from \"redux-saga/effects\";\n\nimport userSaga from \"saga/user\";\nimport fileSaga from \"saga/file\";\n\nexport default function* rootSaga() {\n  yield all([userSaga(), fileSaga()]);\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootReducer from \"redux/modules\";\nimport rootSaga from \"saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport default () => {\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const middleware = applyMiddleware(sagaMiddleware);\n\n  const store = createStore(rootReducer, composeEnhancers(middleware));\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\n\nimport Home from \"pages/Home\";\nimport Store from \"redux/Store\";\n\nconst store = Store();\n\nexport default () => {\n  return (\n    <Provider store={store}>\n      <Home />\n    </Provider>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}